scalar Datetime

directive @adminonly on FIELD_DEFINITION

directive @needsPermission(permission: String) on FIELD_DEFINITION
type Shooping {
  test:Boolean!
}


type Test {
  test:String!
}




type Bind {
  first:String
  second:String
}

type Query {
  pet: Pet!
  viewer: User
  bindable: Bind
  testUnion: Error @needsPermission(permission:"admin")
}

"""
Current User [URL](https://en.wikipedia.org/wiki/URL)
"""
type User {
  "search result"
  search: SearchResult
  "user name"
  name: String!
  userName: String!  @deprecated(reason: "Use `name field`.")
  id: ID!
  image: Image
  parent(level:Int!): String!
  age: Int!
  fullname: String!
  createdAt: Datetime!
  status: UserStatus!
  followers:UserPagination
}

type UserPagination {
  total: Int!
  items: [User!]
}


type Image {
  sm: String!
  md: String!
  lg: String
}

type LoginPayload {
  status: Boolean!
}

input LoginInput {
  username: String!
  time: Datetime
}

type Mutation {
  login(input:LoginInput!, a:Int): LoginPayload!
  logout(n:Int): LoginPayload!
}

type Pet {
  name: String!
}

type NotFoundError {
  message: String!
}

type AccessError {
  code: Int!
}

union Error = NotFoundError | AccessError

interface SearchResult {
  summary: String
  url: String
}

type Client implements SearchResult {
  first_name: String
  last_name: String
  summary: String
  url: String
}

type Order implements SearchResult {
  ref: String
  client: Client
  summary: String
  url: String
}

type Product implements SearchResult {
  name: String
  sku: String
  summary: String
  url: String
}

enum UserStatus{
  STANDARD
  PINNED
  PROMOTED
}

